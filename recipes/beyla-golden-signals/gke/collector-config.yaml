# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel
spec:
  image: otel/opentelemetry-collector-contrib:0.90.0
  config: |
    receivers:
      # receive OTLP metrics from Beyla
      otlp:
        protocols:
          grpc:
          http:
    processors:
      # detect gke resource attributes
      resourcedetection:
        detectors: [env, gcp]
        timeout: 2s
        override: false
      # Filter out metrics that aren't relevant about pods
      filter:
        metrics:
          metric:
            # not about pods
            - resource.attributes["k8s.pod.name"] == nil
            # not relevant to the GKE applications dashboard. You can comment the line below to
            # pass through all metrics generated by Beyla
            - name != "http.server.request.duration" and name != "rpc.server.duration"
          datapoint:
            # Some gRPC metrics appear not to have an RPC method.
            - metric.name == "rpc.server.duration" and attributes["rpc.method"] == ""
            # Some HTTP metrics appear not to have an http method.
            - metric.name == "http.server.request.duration" and attributes["http.request.method"] == ""
    exporters:
      googlemanagedprometheus:
      logging:
        loglevel: debug
    service:
      pipelines:
        metrics:
          receivers: [otlp]
          processors: [filter, resourcedetection]
          exporters: [logging, googlemanagedprometheus]
